name: Auto intraday & close for AIN-10 (US market, DST-aware)

on:
  workflow_dispatch:
  schedule:
    # 平日5分おきに起動（UTC）。市場営業中/クローズ直後かはジョブ内で現地TZで判定
    - cron: "*/5 * * * 1-5"

permissions:
  contents: write

concurrency:
  group: ain10-auto-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      INDEX_KEY: "ain10"
      # 米国市場（夏/冬時間は自動追随）
      MARKET_TZ: "America/New_York"
      SESSION_START: "09:30"
      SESSION_END: "16:00"
      # 営業時間中に回すスナップショット（intraday）スクリプト
      INTRA_SCRIPT: "src/ain10_snapshot.py"
      # クローズ後に確定生成する長期チャート/統計スクリプト
      CLOSE_SCRIPT: "scripts/long_charts.py"
      OUTDIR: "docs/outputs"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Resolve market window (DST-aware)
        id: flags
        shell: bash
        run: |
          set -euo pipefail
          python - << 'PY'
          from datetime import datetime, time, timedelta
          from zoneinfo import ZoneInfo
          import os, pathlib

          tz = ZoneInfo(os.environ["MARKET_TZ"])
          s_h, s_m = map(int, os.environ["SESSION_START"].split(":"))
          e_h, e_m = map(int, os.environ["SESSION_END"].split(":"))

          now = datetime.now(tz)
          start = datetime.combine(now.date(), time(s_h, s_m, tzinfo=tz))
          end   = datetime.combine(now.date(), time(e_h, e_m, tzinfo=tz))
          if end <= start:
              end += timedelta(days=1)

          in_session = start <= now <= end
          at_close_window = end <= now < end + timedelta(minutes=20)

          outdir = pathlib.Path(os.environ["OUTDIR"])
          outdir.mkdir(parents=True, exist_ok=True)
          last_flag = (outdir / "_last_run.txt").read_text(encoding="utf-8").strip() if (outdir / "_last_run.txt").exists() else ""
          close_key = f"close-{now.date()}"
          already_closed = (last_flag == close_key)

          print(f"[INFO] now={now.isoformat()} start={start.time()} end={end.time()} in_session={in_session} at_close={at_close_window} already_closed={already_closed}")

          with open(os.environ["GITHUB_OUTPUT"], "a") as g:
              g.write(f"in_session={'true' if in_session else 'false'}\n")
              g.write(f"at_close={'true' if at_close_window else 'false'}\n")
              g.write(f"already_closed={'true' if already_closed else 'false'}\n")
              g.write(f"close_key={close_key}\n")
          PY

      # ──────────────────────────
      # 営業時間中：5分おきに intraday を更新
      # ──────────────────────────
      - name: Intraday snapshot (every 5 min during session)
        if: steps.flags.outputs.in_session == 'true'
        shell: bash
        run: |
          set -euo pipefail
          echo "== intraday snapshot =="
          python "$INTRA_SCRIPT" || true

          # 命名揺れの正規化（旧: ain_10_ → 新: ain10_）
          shopt -s nullglob
          OUT="$OUTDIR"
          for f in "$OUT"/ain_10_*; do
            base="$(basename "$f")"; new="$OUT/${base/ain_10_/ain10_}"
            [ "$f" = "$new" ] || mv -f "$f" "$new"
          done

      - name: Update stats.json from intraday (lightweight)
        if: steps.flags.outputs.in_session == 'true'
        shell: bash
        env:
          INDEX_KEY: "ain10"
          OUTDIR: "docs/outputs"
        run: |
          set -euo pipefail
          python - << 'PY'
          from pathlib import Path
          import pandas as pd, json
          from datetime import datetime, timezone

          INDEX_KEY = "ain10"
          OUTDIR = Path("docs/outputs")
          intraday = OUTDIR / f"{INDEX_KEY}_intraday.csv"
          if not intraday.exists():
              raise SystemExit(0)

          df = pd.read_csv(intraday, parse_dates=[0], index_col=0)
          df = df.dropna(how="all")
          if df.empty:
              raise SystemExit(0)

          col = df.columns[-1]
          # AIN-10 は intraday が %値を直接保持する仕様（例: 0.95 は +0.95%）
          last = float(df[col].iloc[-1])

          payload = {
              "index_key": INDEX_KEY,
              "pct_1d": round(last, 6),
              "scale": "pct",
              "updated_at": datetime.now(timezone.utc).isoformat(timespec="seconds").replace("+00:00", "Z"),
          }
          (OUTDIR / f"{INDEX_KEY}_stats.json").write_text(
              json.dumps(payload, ensure_ascii=False), encoding="utf-8"
          )
          PY

      - name: Commit intraday & stats (during session)
        if: steps.flags.outputs.in_session == 'true'
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # ★ intraday成果物 + marker + stats.json をまとめてコミット
          git add "$OUTDIR"/*intraday* "$OUTDIR"/*_post_intraday.txt "$OUTDIR"/*_stats.json 2>/dev/null || true
          git commit -m "chore(intraday): ain10 snapshot & stats update" || echo "no intraday changes"
          git push || true

      # ──────────────────────────
      # クローズ直後：当日を履歴に反映 → 長期PNG/統計(stats.json) を確定生成（1回だけ）
      # ──────────────────────────
      - name: Close tasks (once after market close)
        if: steps.flags.outputs.at_close == 'true' && steps.flags.outputs.already_closed != 'true'
        shell: bash
        env:
          CLOSE_KEY: ${{ steps.flags.outputs.close_key }}
        run: |
          set -euo pipefail
          echo "== close window (history & long charts/stats) =="

          # （任意）当日 intraday → history 追記ロジックがあればここで呼ぶ
          if [ -f scripts/update_history.py ]; then
            python scripts/update_history.py || true
          fi

          # 長期チャート＆統計（PNG/CSV/JSON）
          python "$CLOSE_SCRIPT"

          # 命名揺れの正規化（旧: ain_10_ → 新: ain10_）
          shopt -s nullglob
          OUT="$OUTDIR"
          for f in "$OUT"/ain_10_*; do
            base="$(basename "$f")"; new="$OUT/${base/ain_10_/ain10_}"
            [ "$f" = "$new" ] || mv -f "$f" "$new"
          done

          # 二重実行防止フラグ
          echo "$CLOSE_KEY" > "$OUTDIR/_last_run.txt"

          # 変更があればコミット（PNG/CSV/JSON すべて対象）
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$OUTDIR"/* 2>/dev/null || true
          git commit -m "chore(close): ain10 long charts & stats (US close)" || echo "no close changes"
          git push || true

      # ログ用ダンプ
      - name: Dump outputs
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          echo "== list outputs =="
          ls -lah "$OUTDIR" || true
          echo "== sample markers =="
          grep -H . "$OUTDIR"/ain10_post_intraday.txt 2>/dev/null || true
          echo "== stats =="
          head -n 1 "$OUTDIR"/ain10_stats.json 2>/dev/null || true
