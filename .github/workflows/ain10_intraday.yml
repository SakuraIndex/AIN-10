name: "AIN-10 • intraday + publish (JST 09:00–15:30)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "auto | percent | ratio"
        required: true
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: AIN10
  LABEL: AIN-10
  CSV: docs/outputs/ain10_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  OUT_JSON: docs/charts/ain10_stats.json
  OUT_TEXT: docs/charts/ain10_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/ain10_1d.png

  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/AIN10
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

concurrency:
  group: "intraday-ain10-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install -U pip
            python -m pip install -r requirements.txt
          else
            python -m pip install -U pip
            python -m pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || { echo "❌ Missing CSV: ${CSV}"; exit 1; }
          test -f scripts/make_intraday_post.py || { echo "❌ Missing script: scripts/make_intraday_post.py"; exit 1; }

      - name: Prepare output directories
        shell: bash
        run: |
          set -e
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

      - name: Generate intraday snapshot and post (new → legacy fallback)
        shell: bash
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          if python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${CSV}" \
              --out-json "${OUT_JSON}" \
              --out-text "${OUT_TEXT}" \
              --snapshot-png "${SNAPSHOT_PNG}" \
              --session-start "${SESSION_START}" \
              --session-end   "${SESSION_END}" \
              --day-anchor    "${DAY_ANCHOR}" \
              --basis         "${BASIS}" \
              --label         "${LABEL}" \
              --dt-col        "${DT_COL}" \
              --value-type    "${VALUE_TYPE}"; then
            echo "[ok] new CLI finished"
          else
            echo "[fallback] legacy mode"
            python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${CSV}" \
              --out-json "${OUT_JSON}" \
              --out-text "${OUT_TEXT}" || true
          fi

      - name: Fallback: create simple PNG if missing
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -s "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] create simple PNG -> ${SNAPSHOT_PNG}"
            cat > _fallback_png.py <<'PY'
import pandas as pd
import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
from pathlib import Path
csv = Path("${CSV}")
png = Path("${SNAPSHOT_PNG}")
df = pd.read_csv(csv)
cols = [c for c in df.columns if c.lower() != "datetime"]
y = (df[cols].mean(axis=1) if cols else pd.Series([0.0]))
plt.figure(figsize=(12,4), dpi=160)
plt.plot(range(len(y)), y)
plt.title("AIN-10 Intraday (fallback)")
plt.tight_layout()
png.parent.mkdir(parents=True, exist_ok=True)
plt.savefig(png)
PY
            python _fallback_png.py
          fi

      - name: Normalize JSON to ratio(safety)
        shell: bash
        run: |
          set -euo pipefail
          if [ -s "${OUT_JSON}" ]; then
            cat > _normalize_json.py <<'PY'
import json, datetime, pathlib
p = pathlib.Path("${OUT_JSON}")
d = json.loads(p.read_text(encoding="utf-8"))
v = d.get("pct_intraday")
try:
    fv = float(v)
    # percentが入っていたらratioへ
    if abs(fv) > 1.0:
        d["pct_intraday"] = round(fv/100.0, 6)
except Exception:
    pass
d["updated_at"] = datetime.datetime.now().astimezone().isoformat()
p.write_text(json.dumps(d, ensure_ascii=False, indent=2), encoding="utf-8")
PY
            python _normalize_json.py
          fi

      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ain10_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}
            ${{ env.OUT_JSON }}

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy snapshot files into site tree
        shell: bash
        run: |
          set -euo pipefail
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}"     "${dst}/stats.json"
          cp -f "${OUT_TEXT}"     "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png"
          ls -l "${dst}"

      - name: Commit & push site charts
        working-directory: site
        shell: bash
        run: |
          set -euo pipefail
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update AIN-10 intraday charts ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi

      - name: Post Setup Python 3.11
        if: always()
        run: python --version

      - name: Post Checkout (this repo)
        if: always()
        run: echo "✅ Workflow finished."
