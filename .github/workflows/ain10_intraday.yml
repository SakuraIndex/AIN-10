name: "AIN-10 ‚Ä¢ intraday + publish (US Market Time)"

on:
  workflow_dispatch:
    inputs:
      sess_start:
        description: "Session start (JST HH:MM)"
        required: true
        default: "22:30"
      sess_end:
        description: "Session end (JST HH:MM)"
        required: true
        default: "05:00"
      day_anchor:
        description: "Day anchor (JST HH:MM)"
        required: true
        default: "22:30"
      value_type:
        description: "auto | percent | ratio"
        required: true
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: AIN-10
  LABEL: AIN-10
  CSV: docs/outputs/ain10_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  # ÁîüÊàêÁâ©Ôºà„Åì„ÅÆ„É™„ÉùÂÜÖ„Éª‰ªªÊÑèÂêçÔºâ
  OUT_JSON: docs/charts/ain10_stats.json
  OUT_TEXT: docs/charts/ain10_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/ain10_1d.png

  # ÂÖ¨Èñã„Çµ„Ç§„Éà
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/AIN10
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

concurrency:
  group: "intraday-ain10-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          set -e
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            python -m pip install pandas matplotlib numpy
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || (echo "‚ùå Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "‚ùå Missing script: scripts/make_intraday_post.py" && exit 1)

      - name: Prepare output dirs
        shell: bash
        run: |
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

      # ‚îÄ‚îÄ „É°„Ç§„É≥ÁîüÊàêÔºàÂ§±Êïó„Åó„Å¶„ÇÇÂæåÁ∂ö„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ„ÅßË£úÂÆåÔºâ
      - name: Generate intraday snapshot (US session, JST)
        id: try_primary
        shell: bash
        env:
          SESS_START: ${{ inputs.sess_start }}
          SESS_END:   ${{ inputs.sess_end }}
          DAY_ANCHOR: ${{ inputs.day_anchor }}
          VALUE_TYPE: ${{ inputs.value_type }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESS_START}" \
            --session-end "${SESS_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --label "${LABEL}" \
            --dt-col "${DT_COL}" \
            --value-type "${VALUE_TYPE}"

      # ‚îÄ‚îÄ „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºàheredoc ‰∏ç‰ΩøÁî®„Åß YAML ÂÆâÂÆöÔºâ
      - name: Ensure fallback PNG/JSON if missing (no heredoc)
        if: steps.try_primary.outcome != 'success'
        shell: bash
        env:
          CSV:           ${{ env.CSV }}
          OUT_JSON:      ${{ env.OUT_JSON }}
          OUT_TEXT:      ${{ env.OUT_TEXT }}
          SNAPSHOT_PNG:  ${{ env.SNAPSHOT_PNG }}
          LABEL:         ${{ env.LABEL }}
          DT_COL:        ${{ env.DT_COL }}
        run: |
          set -euo pipefail
          need_png=false; need_json=false
          [ -f "${SNAPSHOT_PNG}" ] || need_png=true
          [ -f "${OUT_JSON}" ]     || need_json=true
          if $need_png || $need_json; then
            echo "[fallback] generating ${SNAPSHOT_PNG} / ${OUT_JSON}"
            python scripts/fallback_intraday.py
          fi

      # Âøµ„ÅÆ„Åü„ÇÅÔºöpct_intraday „Çí ratio(¬±0.***) „Å´Ê≠£Ë¶èÂåñ
      - name: Normalize JSON (pct_intraday ‚Üí ratio)
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import json, pathlib
          p = pathlib.Path("${{ env.OUT_JSON }}")
          if p.exists():
              d = json.loads(p.read_text(encoding="utf-8"))
              v = d.get("pct_intraday", None)
              if isinstance(v, (int, float)) and abs(v) > 1.0:
                  d["pct_intraday"] = round(v/100.0, 6)
                  p.write_text(json.dumps(d, ensure_ascii=False, indent=2), encoding="utf-8")
          PY

      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ain10_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.OUT_JSON }}
            ${{ env.SNAPSHOT_PNG }}

      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy files into site (expected names)
        shell: bash
        run: |
          set -euo pipefail
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          # „Çµ„Ç§„ÉàÂÅ¥„ÅØ stats.json / post_intraday.txt / intraday.png „ÇíÂèÇÁÖß
          cp -f "${OUT_JSON}"     "${dst}/stats.json"
          cp -f "${OUT_TEXT}"     "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png"
          echo "üìÅ Copied to ${dst}"; ls -l "${dst}"

      - name: Commit & push to site
        working-directory: site
        shell: bash
        run: |
          set -euo pipefail
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update AIN-10 intraday charts ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${{ env.SITE_BRANCH }}"
          fi
