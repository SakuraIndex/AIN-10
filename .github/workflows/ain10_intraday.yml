name: "AIN-10 • intraday + publish (US Market Time)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST) — US: 22:30"
        required: true
        default: "22:30"
      session_end:
        description: "Session end (HH:MM JST) — US(+1): 05:00"
        required: true
        default: "05:00"
      day_anchor:
        description: "Day anchor time (HH:MM JST) — roll at 22:30"
        required: true
        default: "22:30"
      value_type:
        description: "auto | percent | ratio"
        required: true
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: AIN-10
  LABEL: AIN-10
  CSV: docs/outputs/ain10_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  # このリポ内で生成するファイル（自由名）
  OUT_JSON: docs/charts/ain10_stats.json
  OUT_TEXT: docs/charts/ain10_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/ain10_1d.png

  # 公開サイト（Sakura-Index-Site）の期待パス
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/AIN10
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (AIN-10 repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          python -m pip install pandas matplotlib

      - name: Verify inputs & files
        run: |
          test -f "${CSV}" || (echo "❌ Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "❌ Missing: scripts/make_intraday_post.py" && exit 1)

      - name: Prepare output dirs
        run: |
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

      - name: Generate intraday snapshot (US session, JST)
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end "${SESSION_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --label "${LABEL}" \
            --dt-col "${DT_COL}" \
            --value-type "${VALUE_TYPE}"

      - name: Ensure fallback PNG/JSON if missing (no heredoc)
        run: |
          set -euo pipefail
          if [ ! -f "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] generating a simple PNG → ${SNAPSHOT_PNG}"
            python scripts/fallback_intraday.py "${CSV}" "${SNAPSHOT_PNG}" "${INDEX_KEY}" "${DT_COL}" || true
          fi
          # JSONが無い/壊れた時に最低限の空JSONを置く（サイトクラッシュ回避）
          if [ ! -f "${OUT_JSON}" ]; then
            echo '[{"index_key":"AIN-10","label":"AIN-10","pct_intraday":null,"basis":"prev_close","session":{"start":"22:30","end":"05:00","anchor":"22:30"},"updated_at":""}]' \
            | python -c "import sys,json;print(json.dumps(json.loads(sys.stdin.read()),ensure_ascii=False))" \
            > "${OUT_JSON}" || true
            # 単一オブジェクトに整える
            python - <<'PY' || true
import json, sys
p = "${OUT_JSON}"
try:
    d = json.loads(open(p, encoding="utf-8").read())
    if isinstance(d, list) and d:
        d = d[0]
    if not isinstance(d, dict):
        d = {"index_key":"AIN-10","label":"AIN-10","pct_intraday":None,"basis":"prev_close",
             "session":{"start":"22:30","end":"05:00","anchor":"22:30"},"updated_at":""}
    open(p,"w",encoding="utf-8").write(json.dumps(d, ensure_ascii=False, indent=2))
except Exception as e:
    sys.exit(0)
PY
          fi

      - name: Upload artifacts (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ain10_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}
            ${{ env.OUT_JSON }}

      - name: Checkout site repo (publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy files into site tree (site-expected names)
        run: |
          set -euo pipefail
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          # サイト側の期待名：stats.json / post_intraday.txt / intraday.png
          cp -f "${OUT_JSON}"     "${dst}/stats.json"
          cp -f "${OUT_TEXT}"     "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png"
          echo "📁 Copied to ${dst}:"
          ls -l "${dst}"

      - name: Commit & push site
        working-directory: site
        run: |
          set -euo pipefail
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update AIN-10 intraday charts ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi
