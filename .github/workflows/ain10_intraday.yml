name: "AIN-10 ‚Ä¢ intraday + publish (JST 09:00‚Äì15:30)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "auto | percent | ratio"
        required: true
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: AIN-10
  LABEL: AIN-10
  CSV: docs/outputs/ain10_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  # „Åì„ÅÆ„É™„ÉùÂÜÖ„ÅÆ‰∏ÄÊôÇÂá∫ÂäõÔºàÂêçÂâç„ÅØ‰ªªÊÑèÔºâ
  OUT_JSON: docs/charts/ain10_stats.json
  OUT_TEXT: docs/charts/ain10_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/ain10_1d.png

  # ÂÖ¨Èñã„Çµ„Ç§„Éà
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/AIN10
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

concurrency:
  group: "intraday-ain10-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install -U pip
            python -m pip install -r requirements.txt
          else
            python -m pip install -U pip
            python -m pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || (echo "‚ùå Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "‚ùå Missing script: scripts/make_intraday_post.py" && exit 1)
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

      - name: Generate intraday snapshot and post (new CLI ‚Üí legacy fallback)
        shell: bash
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="

          # 1) Êñ∞CLI„Éà„É©„Ç§
          if python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${CSV}" \
              --out-json "${OUT_JSON}" \
              --out-text "${OUT_TEXT}" \
              --snapshot-png "${SNAPSHOT_PNG}" \
              --session-start "${SESSION_START}" \
              --session-end "${SESSION_END}" \
              --day-anchor "${DAY_ANCHOR}" \
              --basis "${BASIS}" \
              --label "${LABEL}" \
              --dt-col "${DT_COL}" \
              --value-type "${VALUE_TYPE}"; then
            echo "[ok] new CLI finished."
          else
            echo "[fallback] try legacy CLI (reduced options)"
            # 2) ÊóßCLIÔºàÊúÄÂ∞èÂºïÊï∞Ôºâ
            python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${CSV}" \
              --out-json "${OUT_JSON}" \
              --out-text "${OUT_TEXT}"
          fi

          # 3) PNG„ÅåÁÑ°„ÅÑ„Å™„ÇâÁ∞°ÊòìPNG„Çí‰Ωú„Çã
          if [ ! -f "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] create simple PNG ‚Üí ${SNAPSHOT_PNG}"
            python - <<'PY'
import pandas as pd, matplotlib.pyplot as plt, pathlib as P
csv = P.Path("${CSV}"); png = P.Path("${SNAPSHOT_PNG}")
df = pd.read_csv(csv)
# Datetime ‰ª•Â§ñ„ÅÆÊï∞ÂÄ§Âàó„ÅÆÂπ≥Âùá„ÇíÊèè„ÅèÔºàÊö´ÂÆöÔºâ
cols = [c for c in df.columns if c.lower()!="datetime"]
y = df[cols].mean(axis=1) if cols else pd.Series([0])
plt.figure(figsize=(12,4), dpi=160)
plt.plot(range(len(y)), y)
plt.title("AIN-10 Intraday (fallback)")
plt.tight_layout()
png.parent.mkdir(parents=True, exist_ok=True)
plt.savefig(png)
PY
          fi

          # 4) JSON Ê≠£Ë¶èÂåñÔºàpct_intraday „ÅØ ratio=Â∞èÊï∞„Å∏ÊèÉ„Åà„ÇãÔºâ
          python - <<'PY'
import json, pathlib, datetime
p = pathlib.Path("${OUT_JSON}")
if p.exists():
    data = json.loads(p.read_text(encoding="utf-8"))
    # „Ç≠„Éº„ÅÆÊ®ôÊ∫ñÂåñ
    data["index_key"] = data.get("index_key") or "AIN-10"
    data["label"] = data.get("label") or "AIN-10"
    # pct_intraday „Çí ratio „Å∏Ôºà>1 or <-1 „Çí%„Å®„Åø„Å™„Åó„Å¶ /100Ôºâ
    v = data.get("pct_intraday", None)
    try:
        v = float(v)
        if abs(v) > 1.0:   # ‰æã: +1.46 ‚Üí 0.0146
            v = round(v/100.0, 6)
        data["pct_intraday"] = v
    except Exception:
        data["pct_intraday"] = None
    # session/basis/updated_at „ÅÆË£úÂÆå
    data.setdefault("basis", "${BASIS}")
    data.setdefault("session", {"start":"${{ inputs.session_start }}","end":"${{ inputs.session_end }}","anchor":"${{ inputs.day_anchor }}"})
    data.setdefault("updated_at", datetime.datetime.now(datetime.UTC).isoformat())
    p.write_text(json.dumps(data, ensure_ascii=False, indent=2), encoding="utf-8")
else:
    raise SystemExit("JSON not found for normalization: " + str(p))
PY

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ain10_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}
            ${{ env.OUT_JSON }}

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy snapshot files into site tree (site-expected names)
        shell: bash
        run: |
          set -euo pipefail
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}"     "${dst}/stats.json"
          cp -f "${OUT_TEXT}"     "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png"
          echo "üìÅ Copied to ${dst}:"
          ls -l "${dst}"

      - name: Commit & push site charts
        working-directory: site
        shell: bash
        run: |
          set -euo pipefail
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update AIN-10 intraday charts ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi
