name: "AIN-10 • intraday + publish (US Market Time)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: false
        default: ""
      session_end:
        description: "Session end (HH:MM JST)"
        required: false
        default: ""
      value_type:
        description: "auto | percent | ratio"
        required: false
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: AIN-10
  LABEL: AIN-10
  CSV: docs/outputs/ain10_intraday.csv
  OUT_JSON: docs/charts/ain10_stats.json
  OUT_TEXT: docs/charts/ain10_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/ain10_1d.png
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/AIN10
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install pandas matplotlib numpy

      - name: Ensure fallback PNG/JSON (safe heredoc)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

          echo "[step] Checking output files..."
          if [ ! -s "${SNAPSHOT_PNG}" ] || [ ! -s "${OUT_JSON}" ]; then
            echo "[fallback] Creating ${SNAPSHOT_PNG} / ${OUT_JSON}"

            cat <<'PY' > _fallback_intraday.py
import os, json, numpy as np, pandas as pd
import matplotlib
matplotlib.use("Agg")
import matplotlib.pyplot as plt
from pathlib import Path
JST = "Asia/Tokyo"

CSV = Path(os.environ.get("CSV", "docs/outputs/ain10_intraday.csv"))
OUT_JSON = Path(os.environ.get("OUT_JSON", "docs/charts/ain10_stats.json"))
OUT_TEXT = Path(os.environ.get("OUT_TEXT", "docs/charts/ain10_post_intraday.txt"))
SNAPSHOT_PNG = Path(os.environ.get("SNAPSHOT_PNG", "docs/charts/ain10_1d.png"))
LABEL = os.environ.get("LABEL", "AIN-10")
INDEX_KEY = os.environ.get("INDEX_KEY", "AIN-10")

df = pd.read_csv(CSV)
num_cols = [c for c in df.columns if pd.to_numeric(df[c], errors="coerce").notna().mean() > 0.8]
s = df[num_cols].mean(axis=1) if num_cols else pd.Series([0])
last = float(np.round(s.iloc[-1], 3)) if not s.empty else 0.0

plt.figure(figsize=(12, 5), dpi=160)
plt.plot(s, color="#00E5FF" if last >= 0 else "#FF4D4D")
plt.title(f"{LABEL} Intraday Snapshot ({last:+.2f}%)")
plt.tight_layout()
SNAPSHOT_PNG.parent.mkdir(parents=True, exist_ok=True)
plt.savefig(SNAPSHOT_PNG)

payload = {
    "index_key": INDEX_KEY,
    "label": LABEL,
    "pct_intraday": round(last/100.0, 6),
    "updated_at": pd.Timestamp.now(tz='Asia/Tokyo').isoformat()
}
OUT_JSON.write_text(json.dumps(payload, ensure_ascii=False, indent=2), encoding="utf-8")

OUT_TEXT.write_text(
    f"AIN-10 intraday snapshot: {last:+.2f}%\n#{INDEX_KEY} #日本株\n",
    encoding="utf-8"
)
PY

            python _fallback_intraday.py
          else
            echo "[ok] Existing outputs found, skipping fallback."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ain10_intraday_artifacts
          path: |
            ${{ env.OUT_JSON }}
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}

      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy files to site
        run: |
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}"     "${dst}/stats.json"
          cp -f "${OUT_TEXT}"     "${dst}/post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}" "${dst}/intraday.png"
          ls -l "${dst}"

      - name: Commit & push site
        working-directory: site
        run: |
          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update AIN-10 intraday snapshot ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi

      - name: Done
        run: echo "✅ Workflow finished successfully."
