name: AIN-10 • long charts & intraday percent (diag)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/10 0-8 * * 1-5"

permissions:
  contents: write

concurrency:
  group: ain10-long
  cancel-in-progress: false

env:
  INDEX_KEY: ain10
  OUT_DIR: docs/outputs

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show workflow marker & SHA
        run: |
          echo "=== MARKER: ain10-long.yml (diag) is loaded ==="
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "BRANCH (ref)=$GITHUB_REF"

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python - <<'PY'
          import sys, matplotlib
          print("=== DIAG ===")
          print("Python:", sys.version.split()[0])
          print("Matplotlib:", getattr(matplotlib, "__version__", "n/a"))
          PY

      # ───────── 長期チャート生成 ─────────
      - name: DIAG • Check files before plotting
        run: |
          set -euxo pipefail
          echo "=== ls -la scripts ==="
          ls -la scripts || true
          echo "=== ls -la docs/outputs (before) ==="
          ls -la docs/outputs || true
          test -f scripts/long_charts.py || (echo "scripts/long_charts.py NOT FOUND" && exit 2)
          echo "=== MARKER: long_charts step will run ==="

      - name: Generate long-term charts
        run: |
          set -euxo pipefail
          python scripts/long_charts.py
          echo "=== MARKER: long_charts finished ==="

      - name: DIAG • Check files after plotting
        run: |
          set -euxo pipefail
          echo "=== git status (after plot) ==="
          git status --porcelain || true
          echo "=== ls -la docs/outputs (after) ==="
          ls -la docs/outputs || true

      # ───────── 1d（確定系） ─────────
      - name: Compute 1d percent & write posts (from 1d.csv)
        run: |
          set -euxo pipefail
          python scripts/ain10_pct_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${OUT_DIR}/${INDEX_KEY}_1d.csv" \
            --out-json "${OUT_DIR}/${INDEX_KEY}_stats.json" \
            --out-text "${OUT_DIR}/${INDEX_KEY}_post_intraday.txt" \
            --basis open
          echo "--- ${INDEX_KEY}_stats.json (1d-based) ---"
          head -c 400 "${OUT_DIR}/${INDEX_KEY}_stats.json" || true
          echo

      # ───────── intraday（速報系で上書き） ─────────
      - name: Make intraday post (from intraday.csv)
        run: |
          set -euxo pipefail
          if [ -f "${OUT_DIR}/${INDEX_KEY}_intraday.csv" ]; then
            python scripts/make_intraday_post.py \
              --index-key "${INDEX_KEY}" \
              --csv "${OUT_DIR}/${INDEX_KEY}_intraday.csv" \
              --out-text "${OUT_DIR}/${INDEX_KEY}_post_intraday.txt" \
              --out-json "${OUT_DIR}/${INDEX_KEY}_stats.json"
            echo "--- TXT variants (intraday) ---"
            for f in \
              "${OUT_DIR}/${INDEX_KEY}_post_intraday.txt" \
              "${OUT_DIR}/ain_10_post_intraday.txt" \
              "${OUT_DIR}/${INDEX_KEY}_intraday_post.txt" \
              "${OUT_DIR}/ain_10_intraday_post.txt"; do
              if [ -f "$f" ]; then echo "$f"; sed -n '1p' "$f" || true; fi
            done
            echo "--- ${INDEX_KEY}_stats.json (intraday-based override) ---"
            head -c 400 "${OUT_DIR}/${INDEX_KEY}_stats.json" || true
          else
            echo "WARN: ${OUT_DIR}/${INDEX_KEY}_intraday.csv not found, skipped intraday post."
          fi
          echo

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ain10-outputs
          path: |
            docs/outputs/*.csv
            docs/outputs/*.png
            docs/outputs/*post*.txt
            docs/outputs/*stats*.json

      - name: Commit charts if changed
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A docs/outputs
          if ! git diff --cached --quiet; then
            git commit -m "chore(charts): update ${INDEX_KEY} (1d/7d/1m/1y + stats + intraday)"
            git push
          else
            echo "No changes to commit."
          fi
